---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2018/12/22 17:21
---

require "process.BaseProcess"
require "settlement.TeamSettlement"
require "data.GameTeam"
require "manager.TeamManager"

TeamProcess = class("TeamProcess", BaseProcess)

TeamProcess.Teams = TeamManager.Teams
TeamProcess.winTeam = 0
TeamProcess.Red = TeamManager.Red
TeamProcess.Blue = TeamManager.Blue

function TeamProcess:doWin()
    if TeamManager:isTie() then
        self.curStatus = self.Status.ExtraTime
        self.ExtraTick = self.curTick
    else
        self.curStatus = self.Status.GameOver
        self.GameOverTick = self.curTick
        self.winTeam =TeamManager:getWinTeam()
        local players = PlayerManager:getPlayers()
        for _, player in pairs(players) do
            if player.isLife == false then
                LuaTimer:cancel(player.respawnTaskKey)
            end
        end
        TeamSettlement:SendSettlementResult(PlayerManager:copyPlayers(), self.winTeam, 3)
    end
    HostApi.sendStartGame(PlayerManager:getPlayerCount())
end

function TeamProcess:ifExtraTimeEnd()
    --extratime --> gameover
    local ticks = self.curTick - self.ExtraTick

    local seconds = GameConfig.extraTime - ticks
    self:showGameInfo(seconds)
    local players = PlayerManager:getPlayers()
    for i, player in pairs(players) do
        player:onTick()
    end
    --msgExtraTimeHint
    if seconds <= 3 then
        HostApi.sendPlaySound(0, 12)
    else
        HostApi.sendPlaySound(0, 11)
    end

    if seconds <= 0 then
        self:doWin()
    end
end

function TeamProcess:assignTeam(player)
    local id = TeamManager:randomTeam()
    player:setTeamId(id)
    self.Teams[id]:addPlayer(player)
    if self:isRunning() then
        self:teleGamePos(player)
    end
    self:showGameInfo(0)
end

function TeamProcess:onPlayerQuit(player)
    if self:isGameBegin() and player.isReward == false then
        SeasonManager:addUserHonor(player.userId, GameConfig.quitSubHonor, player.level)
    end
    if player.teamId ~= 0 then
        self.Teams[player.teamId]:subPlayer(player)
        self:showGameInfo(0)
    end
    self:ifClose()
end

function TeamProcess:showGameInfo(time)
    local red = self.Teams[self.Red]
    local blue = self.Teams[self.Blue]
    local players = PlayerManager:getPlayers()
    for i, v in pairs(players) do
        HostApi.sendShowPixelGunGameTeam(v.rakssid, time, red.kills, red.curPlayerCount, GameConfig.teamMaxPlayers,
                blue.kills, blue.curPlayerCount, GameConfig.teamMaxPlayers, v.teamId)
    end
end

function TeamProcess:teleGamePos(player)
    local respawn = RespawnConfig:randomRespawn(player.teamId)
    if respawn ~= nil then
        player:teleportPosWithYaw(respawn.position, respawn.yaw)
        player.isLife = true
    end
end

function TeamProcess:onPlayerKill(player)
    if player.teamId ~= 0 then
        self.Teams[player.teamId]:addTeamKill()
    end
end

function TeamProcess:buildShowName(player)
    local nameList = {}
    local nameListNum = 1

    if player.staticAttr.role ~= -1 then
        local clanTitle = TextFormat.colorGreen .. player.staticAttr.clanName
        if player.staticAttr.role == 0 then
            clanTitle = clanTitle .. TextFormat.colorWrite .. "[Member]"
        end
        if player.staticAttr.role == 10 then
            clanTitle = clanTitle .. TextFormat.colorRed .. "[Elder]"
        end
        if player.staticAttr.role == 20 then
            clanTitle = clanTitle .. TextFormat.colorOrange .. "[Chief]"
        end
        nameList[nameListNum] = clanTitle
        nameListNum = nameListNum + 1
    end

    local disName = TextFormat.colorWrite .. player.name
    if player:isGameVip() then
        disName = TextFormat.colorGold .. "[VIP]" .. disName
    end

    if player.teamId > 0 then
        disName = disName .. self.Teams[player.teamId]:getTeamName()
    end

    nameList[nameListNum] = disName
    nameListNum = nameListNum + 1

    local showName
    for i, name in pairs(nameList) do
        local lineName = name
        if (showName == nil) then
            showName = lineName
        else
            showName = showName .. "\n" .. lineName;
        end
    end
    return showName
end

return TeamProcess