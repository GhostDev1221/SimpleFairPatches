---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xiaolai.
--- DateTime: 2018/11/5 11:13
---

require "base.util.tinyyaml"
require "base.util.CsvUtil"
require "base.util.VectorUtil"
require "config.ShopConfig"
require "config.RoleConfig"
require "config.GunsConfig"
require "config.RankNpcConfig"
require "config.ActorNpcConfig"
require "config.ChangePriceConfig"
require "config.ClickChangePriceConfig"
require "config.SkillConfig"
require "config.TigerLotteryConfig"

GameConfig = {}
GameConfig.RootPath = ""
GameConfig.initPos = {}
GameConfig.seek = {}
GameConfig.hide = {}

GameConfig.prepareTime = 0
GameConfig.assignRoleTime = 0
GameConfig.changeActorTime = 0
GameConfig.secondChangeActorTime = 0
GameConfig.gameTime = 0
GameConfig.gameOverTime = 0
GameConfig.gameLastTime = 0
GameConfig.startPlayers = 0
GameConfig.showBloodTime = 0

function GameConfig:init()
    local configPath = self.RootPath
    local config = self:getConfigFromFile(configPath)
    GameConfig.initPos = VectorUtil.newVector3(config.initPos[1], config.initPos[2], config.initPos[3])

    self.prepareTime = tonumber(config.prepareTime)
    self.assignRoleTime = tonumber(config.assignRoleTime)
    self.changeActorTime = tonumber(config.changeActorTime)
    self.changeLotteryAddTime = tonumber(config.changeLotteryAddTime)
    self.secondChangeActorTime = tonumber(config.secondChangeActorTime)
    self.gameTime = tonumber(config.gameTime)
    self.gameOverTime = tonumber(config.gameOverTime)
    self.gameLastTime = tonumber(config.gameLastTime)
    self.showBloodTime = tonumber(config.showBloodTime)
    self.startPlayers = tonumber(config.startPlayers)

    self:initSeek(config.seekPos)
    self:initHide(config.hidePos)

    ShopConfig:init(self:getConfigFromFile(string.gsub(configPath, "config", "shop")))
    RankNpcConfig:init(config.rankNpc)
    ActorNpcConfig:init(self:getCsvConfig(string.gsub(configPath, "config.yml", "ActorNpc.csv")))
    ChangePriceConfig:init(self:getCsvConfig(string.gsub(configPath, "config.yml", "ChangePrice.csv")))
    ClickChangePriceConfig:init(self:getCsvConfig(string.gsub(configPath, "config.yml", "ClickChangePrice.csv")))
    GunsConfig:init(self:getCsvConfig(string.gsub(configPath, "config.yml", "Guns.csv")))
    RoleConfig:init(self:getCsvConfig(string.gsub(configPath, "config.yml", "Role.csv")))
    SkillConfig:init(self:getCsvConfig(string.gsub(configPath, "config.yml", "Skill.csv")))
    TigerLotteryConfig:init(self:getCsvConfig(string.gsub(configPath, "config.yml", "TigerLottery.csv")))
end

function GameConfig:initSeek(config)
    self.seekPos = {}
    for i, pos in pairs(config.initPos) do
            self.seekPos[i] = VectorUtil.newVector3(pos.pos[1], pos.pos[2], pos.pos[3])
    end
end

function GameConfig:initHide(config)
    self.hidePos = {}
    for i, pos in pairs(config.initPos) do
        self.hidePos[i] = VectorUtil.newVector3(pos.pos[1], pos.pos[2], pos.pos[3])
    end
end

function GameConfig:randomSeekPos()
    math.randomseed(os.clock() * 1000000)
    return self.seekPos[math.random(1, #self.seekPos)]
end

function GameConfig:randomHidePos()
    math.randomseed(os.clock() * 1000000)
    return self.hidePos[math.random(1, #self.hidePos)]
end

function GameConfig:getConfigFromFile(path)
    local file = io.open(path,"r")
    local fileStream = file.read(file,"*a")
    return TinyParse(fileStream)
end

function GameConfig:getCsvConfig(path)
    return CsvUtil.loadCsvFile(path, 2)
end


return GameConfig