---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Jimmy.
--- DateTime: 2018/12/30 0030 14:21
---
GameArmor = {}

GameArmor.ARMOR_UP = 0
GameArmor.ARMOR_SPEEDUP = 1

function GameArmor:onUpgradeArmorFinished(player, level)
    player.armor_upTime = 0
    player.armor_level = level + 1
    player:updateDefense()
    self:sendOpenArmorUpgrade(player, false)
end

function GameArmor:quickUpgradeArmorFinished(player, level)
    WaitUpgradeQueue:removeUpgradeTask(player.userId, WaitUpgradeQueue.UpgradeType.UpgradeArmor, level)
    player.armor_upTime = 0
    player.armor_level = level + 1
    player:updateDefense()
    self:sendOpenArmorUpgrade(player, true)
end

function GameArmor:upgradeArmor(player, state, operateType)

    if operateType == GameArmor.ARMOR_UP then
        self:isCanUpArmor(player)
    elseif operateType == GameArmor.ARMOR_SPEEDUP then
        self:isCanSpeedUpArmor(player)
    end

    self:sendOpenArmorUpgrade(player, state)
end

function GameArmor:isCanUpArmor(player)
    if player.armor_level >= #ArmorConfig.armor then
        return
    end

    local nextLevelcfg = ArmorConfig:getArmorInfoByLevel(player.armor_level + 1)
    local nextArmorValue = ArmorConfig:getCurArmorValueByLevel(player.armor_level + 1)

    if player.maxHealth < nextArmorValue then
        return
    end

    if player.armor_upTime <= 0 then
        local goodId = 40000 + player.armor_level + 1
        if self:CostCoin(player, goodId, nextLevelcfg.priceId, nextLevelcfg.price, Define.UpArmor .. "#" .. player.armor_level) then
            self:armorUping(player, player.armor_level)
        end
    end
end

function GameArmor:CostCoin(player, goodId, coinId, coinNum, type)
    if coinId == Define.Money.MONEY then
        if player:getCurrency() >= coinNum then
            player:subCurrency(coinNum)
            return true
        end
    elseif coinId == Define.Money.DIAMOND then
        if player:getDiamond() >= coinNum then
            player:consumeDiamonds(goodId, coinNum, type)
        end
    end
    return false
end

function GameArmor:isCanSpeedUpArmor(player)
    local nextLevelcfg = ArmorConfig:getArmorInfoByLevel(player.armor_level + 1)
    if player.armor_upTime > 0 then
        local goodId = 50000 + player.armor_level + 1
        if self:CostCoin(player, goodId, nextLevelcfg.coinId, nextLevelcfg.coin, Define.SpeedUpGradeArmor .. "#" .. player.armor_level) then
            self:quickUpgradeArmorFinished(player, player.armor_level)
        end
    end
end

function GameArmor:armorUping(player, level)
    local nextLevelcfg = ArmorConfig:getArmorInfoByLevel(level + 1)
    player.armor_upTime = nextLevelcfg.time + os.time()
    WaitUpgradeQueue:addUpgradeTask(player.userId, WaitUpgradeQueue.UpgradeType.UpgradeArmor, level, nextLevelcfg.time)
end

function GameArmor:sendOpenArmorUpgrade(player, open)
    local nextArmorData = ArmorConfig:getArmorInfoByLevel(player.armor_level + 1)
    local curArmorData = ArmorConfig:getArmorInfoByLevel(player.armor_level)

    local data = {}
    data.level = player.armor_level
    if player.armor_upTime == 0 then
        data.time = 0
    else
        data.time = player.armor_upTime - os.time()
    end

    if player.armor_upTime <= 0 then
        data.price = nextArmorData.price
        data.priceId = nextArmorData.priceId
    else
        data.price = nextArmorData.coin
        data.priceId = nextArmorData.coinId
    end

    if data.priceId == Define.Money.DIAMOND then
        data.priceImg = "set:app_shop.json image:app_shop_diamonds_mods"
    else
        data.priceImg = "set:gun_store.json image:gold"
    end

    data.armorImg = curArmorData.armorImg
    data.armorUp = nextArmorData.armorUp

    data.baseArmor = ArmorConfig.baseArmor
    data.maxArmor = curArmorData.maxArmor
    data.curArmor = player.armor_value
    data.maxHealth = player.maxHealth
    data.maxLevel = #ArmorConfig.armor

    HostApi.sendOpenArmorUpgrade(player.rakssid, open, json.encode(data))
end

return GameArmor




