---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Jimmy.
--- DateTime: 2018/12/30 0030 13:51
---
GunLevelConfig = {}
GunLevelConfig.GunLevels = {}

function GunLevelConfig:initConfig(gun_levels)
    for _, config in pairs(gun_levels) do
        local gun_level = {}
        gun_level.GunId = tonumber(config.GunId)
        gun_level.Level = tonumber(config.Level) or 1
        gun_level.RealDamage = tonumber(config.RealDamage) or 0
        gun_level.UpgradePriceType = tonumber(config.UpgradePriceType) or 0
        gun_level.UpgradePrice = tonumber(config.UpgradePrice) or 0
        gun_level.UpgradeTime = tonumber(config.UpgradeTime) or 0
        gun_level.QuickUpgradePriceType = tonumber(config.QuickUpgradePriceType) or 0
        gun_level.QuickUpgradePrice = tonumber(config.QuickUpgradePrice) or 0
        table.insert(self.GunLevels, gun_level)
    end
end

function GunLevelConfig:getGunLevel(gunId, level)
    for _, GunLevel in pairs(self.GunLevels) do
        if GunLevel.GunId == gunId and GunLevel.Level == level then
            return GunLevel
        end
    end
    return nil
end

function GunLevelConfig:getGunLevelDamage(gunId, level)
    for _, GunLevel in pairs(self.GunLevels) do
        if GunLevel.GunId == gunId and GunLevel.Level == level then
            return GunLevel.RealDamage
        end
    end
    return 0
end

return GunLevelConfig