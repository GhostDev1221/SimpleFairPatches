---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Jimmy.
--- DateTime: 2018/12/30 0030 13:41
---
require "data.GameGunStore"

GunStoreListener = {}

function GunStoreListener:init()
    PlayerFirstShowStoreGunEvent.registerCallBack(self.onFirstShowStoreGun)
    PlayerUseStoreGunEvent.registerCallBack(self.onUseStoreGun)
    PlayerBuyStoreGunEvent.registerCallBack(self.onBuyStoreGun)
    PlayerUpgradeStoreGunEvent.registerCallBack(self.onUpgradeStoreGun)
    PlayerQuickUpgradeStoreGunEvent.registerCallBack(self.onQuickUpgradeStoreGun)
    PlayerFirstShowStorePropEvent.registerCallBack(self.onFirstShowStoreProp)
    PlayerUseStorePropEvent.registerCallBack(self.onUseStoreProp)
    PlayerUnloadStorePropEvent.registerCallBack(self.onUnloadStoreProp)
    PlayerBuyStorePropEvent.registerCallBack(self.onBuyStoreProp)
    PlayerUpgradeStorePropEvent.registerCallBack(self.onUpgradeStoreProp)
    PlayerQuickUpgradeStorePropEvent.registerCallBack(self.onQuickUpgradeStoreProp)
end

function GunStoreListener.onFirstShowStoreGun(rakssid, gunId)
    local player = PlayerManager:getPlayerByRakssid(rakssid)
    if player == nil then
        return
    end
    if DbUtil:CanSavePlayerData(player, DbUtil.GAME_DATA)
            and DbUtil:CanSavePlayerData(player, DbUtil.ARMORY_DATA) then
        GameGunStore:onFirstShowStoreGun(player, gunId)
    end
end

function GunStoreListener.onUseStoreGun(rakssid, gunId)
    local player = PlayerManager:getPlayerByRakssid(rakssid)
    if player == nil then
        return
    end
    if DbUtil:CanSavePlayerData(player, DbUtil.GAME_DATA)
            and DbUtil:CanSavePlayerData(player, DbUtil.ARMORY_DATA) then
        GameGunStore:onUseStoreGun(player, gunId)
    end
end

function GunStoreListener.onBuyStoreGun(rakssid, gunId)
    local player = PlayerManager:getPlayerByRakssid(rakssid)
    if player == nil then
        return
    end
    if DbUtil:CanSavePlayerData(player, DbUtil.GAME_DATA)
            and DbUtil:CanSavePlayerData(player, DbUtil.ARMORY_DATA) then
        GameGunStore:onBuyStoreGun(player, gunId)
    end
end

function GunStoreListener.onUpgradeStoreGun(rakssid, gunId)
    local player = PlayerManager:getPlayerByRakssid(rakssid)
    if player == nil then
        return
    end
    if DbUtil:CanSavePlayerData(player, DbUtil.GAME_DATA)
            and DbUtil:CanSavePlayerData(player, DbUtil.ARMORY_DATA) then
        GameGunStore:onUpgradeStoreGun(player, gunId)
    end
end

function GunStoreListener.onQuickUpgradeStoreGun(rakssid, gunId)
    local player = PlayerManager:getPlayerByRakssid(rakssid)
    if player == nil then
        return
    end
    if DbUtil:CanSavePlayerData(player, DbUtil.GAME_DATA)
            and DbUtil:CanSavePlayerData(player, DbUtil.ARMORY_DATA) then
        GameGunStore:onQuickUpgradeStoreGun(player, gunId)
    end
end

function GunStoreListener.onFirstShowStoreProp(rakssid, propId)
    local player = PlayerManager:getPlayerByRakssid(rakssid)
    if player == nil then
        return
    end
    if DbUtil:CanSavePlayerData(player, DbUtil.GAME_DATA)
            and DbUtil:CanSavePlayerData(player, DbUtil.ARMORY_DATA) then
        GameGunStore:onFirstShowStoreProp(player, propId)
    end
end

function GunStoreListener.onUseStoreProp(rakssid, propId)
    local player = PlayerManager:getPlayerByRakssid(rakssid)
    if player == nil then
        return
    end
    if DbUtil:CanSavePlayerData(player, DbUtil.GAME_DATA)
            and DbUtil:CanSavePlayerData(player, DbUtil.ARMORY_DATA) then
        GameGunStore:onUseStoreProp(player, propId)
    end
end

function GunStoreListener.onUnloadStoreProp(rakssid, propId)
    local player = PlayerManager:getPlayerByRakssid(rakssid)
    if player == nil then
        return
    end
    if DbUtil:CanSavePlayerData(player, DbUtil.GAME_DATA)
            and DbUtil:CanSavePlayerData(player, DbUtil.ARMORY_DATA) then
        GameGunStore:onUnloadStoreProp(player, propId)
    end
end

function GunStoreListener.onBuyStoreProp(rakssid, propId)
    local player = PlayerManager:getPlayerByRakssid(rakssid)
    if player == nil then
        return
    end
    if DbUtil:CanSavePlayerData(player, DbUtil.GAME_DATA)
            and DbUtil:CanSavePlayerData(player, DbUtil.ARMORY_DATA) then
        GameGunStore:onBuyStoreProp(player, propId)
    end
end

function GunStoreListener.onUpgradeStoreProp(rakssid, propId)
    local player = PlayerManager:getPlayerByRakssid(rakssid)
    if player == nil then
        return
    end
    if DbUtil:CanSavePlayerData(player, DbUtil.GAME_DATA)
            and DbUtil:CanSavePlayerData(player, DbUtil.ARMORY_DATA) then
        GameGunStore:onUpgradeStoreProp(player, propId)
    end
end

function GunStoreListener.onQuickUpgradeStoreProp(rakssid, propId)
    local player = PlayerManager:getPlayerByRakssid(rakssid)
    if player == nil then
        return
    end
    if DbUtil:CanSavePlayerData(player, DbUtil.GAME_DATA)
            and DbUtil:CanSavePlayerData(player, DbUtil.ARMORY_DATA) then
        GameGunStore:onQuickUpgradeStoreProp(player, propId)
    end
end

return GunStoreListener