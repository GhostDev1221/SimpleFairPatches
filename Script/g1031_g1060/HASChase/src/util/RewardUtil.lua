---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2018/11/12 16:22
---


RewardUtil = {}

function RewardUtil:doReward(role)
    local players = self:sortPlayerRank()
    for rank, player in pairs(players) do
        RewardManager:addRewardQueue(player.userId, rank)
        UserExpManager:addUserExp(player.userId, player.role == role, 2)
    end
    RewardManager:getQueueReward(function(data, role)
        self:sendGameSettlement(role)
    end, role)
end

function RewardUtil:sendGameSettlement(winner)
    local Players = self:sortPlayerRank()
    local players = {}
    for rank, player in pairs(Players) do
        players[rank] = self:newSettlementItem(player, rank, winner)
        if player.isAddMoney == false then
            player:addMoney(player.gold)
            player.isAddMoney = true
        end
    end
    for rank, player in pairs(Players) do
        local result = {}
        result.players = players
        result.own = self:newSettlementItem(player, rank, winner)
        HostApi.sendGameSettlement(player.rakssid, json.encode(result), true)
    end
end

function RewardUtil:sortPlayerRank()
    local players = {}
    local allplayers = PlayerManager:copyPlayers()
    for i, player in pairs(allplayers) do
        if player.role ~= GamePlayer.ROLE_PENDING then
            table.insert(players, player)
        end
    end

    table.sort(players, function(a, b)
        if a.isWiner ~= b.isWiner then
            return a.isWiner > b.isWiner
        elseif a.killNum ~= b.killNum then
            return a.killNum > b.killNum
        elseif a.hideTime ~= b.hideTime then
            return a.hideTime > b.hideTime
        end
        return tonumber(tostring(a.userId)) > tonumber(tostring(b.userId))
    end)

    return players
end

function RewardUtil:sortPlayerRankOnRunning()
    local players = {}
    local allplayers = PlayerManager:copyPlayers()
    for i, player in pairs(allplayers) do
        if player.role ~= GamePlayer.ROLE_PENDING then
            table.insert(players, player)
        end
    end

    table.sort(players, function(a, b)
        if a.score ~= b.score then
            return a.score > b.score
        end
        return tonumber(tostring(a.userId)) > tonumber(tostring(b.userId))
    end)

    return players
end

function RewardUtil:doReport(players)
    for rank, player in pairs(players) do
        if player.isReport == false then
            ReportManager:reportUserData(player.userId, player.kills, rank, 1)
            player.isReport = true
        end
    end
    ReportManager:closeServer()
end

function RewardUtil:getPlayerRank(player)
    local players = self:sortPlayerRankOnRunning()
    local rank = 0
    for i, v in pairs(players) do
        rank = rank + 1
        if v.rakssid == player.rakssid then
            return rank
        end
    end
    return rank
end

function RewardUtil:newSettlementItem(player, rank, winner)
    local item = {}
    item.name = player.name
    item.rank = rank
    item.points = player.scorePoints
    item.gold = player.gold
    item.available = player.available
    item.hasGet = player.hasGet
    item.vip = player.vip
    item.kills = player.kills
    item.adSwitch = player.adSwitch or 0
    if item.gold <= 0 or player.isSingleReward then
        item.adSwitch = 0
    end
    if player.role == winner then
        item.isWin = 1
    else
        item.isWin = 0
    end
    return item
end

return RewardUtil