---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2018/11/5 12:11
---
require "base.messages.IMessages"
require "base.util.MsgSender"
require "base.util.VectorUtil"
require "base.code.GameOverCode"
require "messages.Messages"
require "data.GamePlayer"
require "Match"

PlayerListener = {}

function PlayerListener:init()
    BaseListener.registerCallBack(PlayerLoginEvent, self.onPlayerLogin)
    BaseListener.registerCallBack(PlayerLogoutEvent, self.onPlayerLogout)
    BaseListener.registerCallBack(PlayerReadyEvent, self.onPlayerReady)
    BaseListener.registerCallBack(PlayerRespawnEvent, self.onPlayerRespawn)

    PlayerAttackedEvent.registerCallBack(self.onPlayerHurt)
    PlayerDieEvent.registerCallBack(self.onPlayerDie)
    PlayerShotActorNpcEvent.registerCallBack(self.onPlayerShotActorNpc)
    PlayerClickChangeActorEvent.registerCallBack(self.onPlayerClickChangeActor)
    PlayerBuyActorResultEvent.registerCallBack(self.onPlayerBuyActorResult)
    PlayerBuyGoodsEvent.registerCallBack(self.onPlayerBuyGoods)
    PlayerChangeActorEvent.registerCallBack(self.onPlayerChangeActor)
    PlayerReviewPlayerEvent.registerCallBack(self.onPlayerReviewPlayer)
    PlayerDropItemEvent.registerCallBack(self.onPlayerDropItem)
    PlayerBackHallEvent.registerCallBack(self.onPlayerBackHall)
    PlayerCurrencyChangeEvent.registerCallBack(self.onPlayerCurrencyChange)
end

function PlayerListener.onPlayerLogin(clientPeer)
    if GameMatch.curStatus >= GameMatch.Status.AssignRole then
        return GameOverCode.GameStarted
    end
    local player = GamePlayer.new(clientPeer)
    player:init()
    return GameOverCode.Success, player, 1
end

function PlayerListener.onPlayerLogout(player)
    if player.isLife == true then
        if GameMatch:isGameStart() or GameMatch:isChangeModel() then
            GameMatch:onPlayerQuit(player)
        elseif GameMatch.curStatus == GameMatch.Status.AssignRole and PlayerManager:isPlayerEnough(GameConfig.startPlayers) == false then
            ActorNpcConfig:clearActor()
            GameMatch.curStatus = GameMatch.Status.WaitingPlayer
        end
    end
end

function PlayerListener.onPlayerCurrencyChange(rakssid, currency)
    local player = PlayerManager:getPlayerByRakssid(rakssid)
    if player ~= nil then
        player:onMoneyChange()
    end
end

function PlayerListener.onPlayerReady(player)
    DBUtil:getPlayerData(player)
    RankNpcConfig:getPlayerRankData(player)
    HostApi.sendPlaySound(player.rakssid, 10020)
    HostApi.sendShowHideAndSeekBtnStatus(player.rakssid, false, false, false)
    MsgSender.sendMsgToTarget(player.rakssid, IMessages:msgWelcomePlayer(Messages:gamename()))
    return 43200
end

function PlayerListener.onPlayerBuyGoods(rakssid, type, itemId, msg, isAddItem)
    local player = PlayerManager:getPlayerByRakssid(rakssid)
    if player == nil then
        return false
    end

    if GameMatch:isGameStart() == false then
        msg.value = IMessages:msgDontBuyGoodsByNoStart()
        return false
    end
    if player.role ~= ShopGoodsConfig:getRoleById(itemId) then
        msg.value = Messages:msgDontBuyGoodsByWrongRole()
        return false
    end
    return true
end

function PlayerListener.onPlayerBackHall(rakssid)
    local player = PlayerManager:getPlayerByRakssid(rakssid)
    if player == nil then
        return
    end
    BackHallManager:addPlayer(player)
end

function PlayerListener.onPlayerRespawn(player)
    player:teleInitPos()
    return 43200
end

function PlayerListener.onPlayerHurt(hurtPlayer, hurtFrom, damageType, hurtValue)
    if GameMatch:isGameStart() == false then
        return false
    end
    local hurter = PlayerManager:getPlayerByPlayerMP(hurtPlayer)
    local fromer = PlayerManager:getPlayerByPlayerMP(hurtFrom)
    if damageType == "outOfWorld" and hurter ~= nil then
        hurtValue.value = 999
        return true
    end

    if hurter ~= nil and fromer ~= nil then
        if damageType == "player" then
            return false
        end
        if hurter.role == fromer.role then
            return false
        end
        if fromer.isAnimal == true then
            return false
        end
        hurtValue.value = hurtValue.value - hurter.defense
        hurter:onHurt(hurtValue.value)
        return true
    else
        return false
    end
end

function PlayerListener.onBuyCustomProp(rakssId, itemId, msgType)
    local player = PlayerManager:getPlayerByRakssid(rakssId)
    if player ~= nil then
        player:addItem(itemId, 1, 0)
    end
end

function PlayerListener.onPlayerDie(diePlayer, iskillByPlayer, killPlayer)
    local dier = PlayerManager:getPlayerByPlayerMP(diePlayer)
    local killer = PlayerManager:getPlayerByPlayerMP(killPlayer)
    if dier == nil then
        return true
    end
    GameMatch:resetRoleNum(dier.role)
    if dier.role == GamePlayer.ROLE_HIDE and killer ~= nil then
        killer:onKill()
        MsgSender.sendBottomTipsToTarget(dier.rakssid, 3, Messages:finded())
        MsgSender.sendMsg(Messages:findTrue(dier.name, killer.name))
    end
    dier:onDie()
    GameMatch:ifGameOverByPlayer()
    return true
end

function PlayerListener.onPlayerClickChangeActor(rakssid)
    if GameMatch:isCanChangeModel() == false then
        MsgSender.sendBottomTipsToTarget(rakssid, 3, Messages:changeActorByNoStart())
        return
    end
    local player = PlayerManager:getPlayerByRakssid(rakssid)
    if player == nil then
        return
    end
    player:ifChangeModel()
end

function PlayerListener.onPlayerBuyActorResult(rakssid, result)
    local player = PlayerManager:getPlayerByRakssid(rakssid)
    if player == nil then
        return
    end
    if result then
        player:ChangeModel()
    end
end

function PlayerListener.onPlayerChangeActor(rakssid)
    local player = PlayerManager:getPlayerByRakssid(rakssid)

    if player == nil then
        return
    end
    if player.changeModelTimes ~= 0 then
        local price = ChangePriceConfig:getPriceByTime(player.changeModelTimes)
        player.clientPeer:buyChangeActor(false, player.changeModelTimes, price)
    end
end

function PlayerListener.onPlayerShotActorNpc(rakssid, entityId)
    if GameMatch:isGameStart() == false then
        return
    end
    local player = PlayerManager:getPlayerByRakssid(rakssid)

    if player == nil or player.role == GamePlayer.ROLE_HIDE then
        return
    end
    if player.isAnimal == true then
        return
    end
    if GameMatch:getGameLastTime() < GameConfig.invincibleTime then
        MsgSender.sendCenterTipsToTarget(rakssid, 3, Messages:findFalseLast45Second())
        return
    end
    player:attackMiss()
end

function PlayerListener.onPlayerReviewPlayer(rakssid1, rakssid2)
    local player1 = PlayerManager:getPlayerByRakssid(rakssid1)
    local player2 = PlayerManager:getPlayerByRakssid(rakssid2)
    if player1 ~= nil and player2 ~= nil then
        GameMatch:rebuildShowName()
    end
end

function PlayerListener.onPlayerDropItem(rakssid, itemId, itemMeta)
    return false
end

return PlayerListener