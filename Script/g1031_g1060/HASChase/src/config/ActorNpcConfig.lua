---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2018/11/5 15:10
---
require "base.util.VectorUtil"

ActorNpcConfig = {}

ActorNpcConfig.actorNpc = {}
ActorNpcConfig.model = {}
ActorNpcConfig.npcs = {}
ActorNpcConfig.model = {}
ActorNpcConfig.ifUsed = {}

function ActorNpcConfig:init(config)
    self:initActorNpc(config)
end

function ActorNpcConfig:initActorNpc(ActorNpcs)
    local num = 0
    for id, actornpc in pairs(ActorNpcs) do
        local item = {}
        item.id = actornpc.id
        item.actor = actornpc.actor
        item.name = actornpc.name
        item.pos = VectorUtil.newVector3(actornpc.x, actornpc.y, actornpc.z)
        item.yaw = tonumber(actornpc.yaw)
        item.changeable = actornpc.changeable
        item.actortype = actornpc.actortype
        if item.changeable == "1" then
            num = num + 1
            self.model[num] = item
        end
        self.actorNpc[id] = item
    end
end

function ActorNpcConfig:randomModel(model)
    local models = {}
    local lastmodel = {}
    models = self.npcs
    math.randomseed(os.clock() * 1000000)
    local index = math.random(1,#models)
    local m = models[index].config
    if model ~= nil then
        lastmodel = model
    end
    local check = 0
    if check == 0 then
        while m.changeable == "0" or model == m or self.ifUsed[index] == true or m.actortype == lastmodel.actortype do
            lastmodel = m
            index = math.random(1,#models)
            m = models[index].config
        end
    end
    self.ifUsed[index] = true
    return m
end

function ActorNpcConfig:removeActorNpc(model)
    for i, npc in pairs(self.npcs) do
        if npc.config.id == model.id then
            EngineWorld:removeEntity(npc.entityId)
        end
    end
end

function ActorNpcConfig:clearActor()
    for i, npc in pairs(self.npcs) do
        EngineWorld:removeEntity(npc.entityId)
    end
end

function ActorNpcConfig:replyModel(model)
    for i, npc in pairs(self.npcs) do
        if npc.config.id == model.id then
            self.ifUsed[i] = false
            npc.entityId = EngineWorld:addActorNpc(npc.config.pos, npc.config.yaw, npc.config.actor)
            break
        end
    end
end

function ActorNpcConfig:prepareActorNpc()
    local num = 0
    for i, v in pairs(ActorNpcConfig.actorNpc) do
        num = num + 1
        self.npcs[num] = {}
        self.npcs[num].config = v
        self.npcs[num].entityId = EngineWorld:addActorNpc(v.pos, v.yaw, v.actor)
    end
end

return ActorNpcConfig