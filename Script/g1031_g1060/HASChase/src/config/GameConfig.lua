---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2018/11/5 10:38
---
require "base.util.tinyyaml"
require "base.util.CsvUtil"
require "base.util.VectorUtil"
require "config.RankNpcConfig"
require "config.ShopConfig"
require "config.ActorNpcConfig"
require "config.ChangePriceConfig"
require "config.RoleConfig"
require "config.GunsConfig"
require "config.SkillConfig"
require "config.ShopGoodsConfig"
require "config.AnimalActorConfig"
require "config.AreaOfEliminateConfig"

GameConfig = {}
GameConfig.RootPath = ""

GameConfig.seekNum = {}
GameConfig.initPos = {}

GameConfig.prepareTime = 0
GameConfig.assignRoleTime = 0
GameConfig.changeActorTime = 0
GameConfig.gameTime = 0
GameConfig.gameOverTime = 0
GameConfig.silentTime = 0
GameConfig.sneerTime = 0
GameConfig.invincibleTime = 0
GameConfig.showBloodTime = 0
GameConfig.seek = {}


function GameConfig:init()
    local configPath = self.RootPath
    local config = self:getConfigFromFile(configPath)
    self.initPos = VectorUtil.newVector3(config.initPos[1], config.initPos[2], config.initPos[3])

    self.prepareTime = tonumber(config.prepareTime)
    self.assignRoleTime = tonumber(config.assignRoleTime)
    self.changeActorTime = tonumber(config.changeActorTime)
    self.gameTime = tonumber(config.gameTime)
    self.gameOverTime = tonumber(config.gameOverTime)
    self.sneerBeginTime = tonumber(config.sneerBeginTime)
    self.sneerKeepTime = tonumber(config.sneerKeepTime)
    self.sneerSilentTime = tonumber(config.sneerSilentTime)
    self.invincibleTime = tonumber(config.invincibleTime)
    self.showBloodTime = tonumber(config.showBloodTime)
    self.startPlayers = tonumber(config.startPlayers)

    self:initSeekPos(config.seekPos)
    RankNpcConfig:init(config.rankNpc)
    ShopConfig:init(config.shop)

    GunsConfig:init(self:getCsvConfig(string.gsub(configPath, "config.yml", "Guns.csv")))
    ActorNpcConfig:init(self:getCsvConfig(string.gsub(configPath, "config.yml", "ActorNpc.csv")))
    RoleConfig:init(self:getCsvConfig(string.gsub(configPath, "config.yml", "Role.csv")))
    ChangePriceConfig:init(self:getCsvConfig(string.gsub(configPath, "config.yml", "ChangePrice.csv")))
    SkillConfig:init(self:getCsvConfig(string.gsub(configPath, "config.yml", "Skill.csv")))
    ShopGoodsConfig:init(self:getCsvConfig(string.gsub(configPath, "config.yml", "ShopGoods.csv")))
    AnimalActorConfig:init(self:getCsvConfig(string.gsub(configPath, "config.yml", "AnimalActor.csv")))
    AreaOfEliminateConfig:init(self:getCsvConfig(string.gsub(configPath, "config.yml", "AreaOfEliminate.csv")))
end

function GameConfig:initSeekPos(config)
    self.seek.initPos = {}
    for i, pos in pairs(config.initPos) do
        self.seek.initPos[i] = VectorUtil.newVector3(pos.pos[1], pos.pos[2], pos.pos[3])
    end
end

function GameConfig:randomSeekPos()
    math.randomseed(os.clock() * 1000000)
    return self.seek.initPos[math.random(1, #self.seek.initPos)]
end

function GameConfig:getConfigFromFile(path)
    local file = io.open(path,"r")
    local fileStream = file.read(file, "*a")
    return TinyParse(fileStream)
end

function GameConfig:getCsvConfig(path)
    return CsvUtil.loadCsvFile(path, 2)
end

return GameConfig