---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Jimmy.
--- DateTime: 2018/10/23 0023 11:36
---
XGameCar = class()

function XGameCar:ctor(config)
    self.entityId = 0
    self.id = config.ID
    self.direction1 = config.Direction1
    self.direction2 = config.Direction2
    self.route = config.RailRoute
    self.lastProgress = 50
    self.currProgress = 50
    self.isFirst = true
    self.isRunning = false
    self.teamId = 0
    self.buffs = XCarBuffConfig:getBuffByCarID(self.id)
    self.position = config.Position
    self:onCreate(config)
    self:syncProgress()
end

function XGameCar:getTeamId()
    return self.teamId
end

function XGameCar:getPosition()
    return self.position
end

function XGameCar:syncProgress()
    HostApi.changeCarProgress(self.id, self.currProgress)
    self.lastProgress = self.currProgress
end

function XGameCar:onCreate(config)
    self.entityId = EngineWorld:getWorld():addRailCar(config.Position, 90, config.Actor, config.Name, false)
    EngineWorld:getWorld():setRailSpeedInfo(self.entityId, 0.4, config.Speed, config.AddSpeed)
    EngineWorld:getWorld():setRailCarRecordRoute(self.entityId, true)
    GameManager:onAddCar(self)
end

function XGameCar:onTick(ticks)
    if ticks % 2 ~= 0 then
        return
    end
    if self.lastProgress == self.currProgress then
        return
    end
    self:syncProgress()
end

function XGameCar:onPlayerLongHit(player)
    if self.entityId == 0 then
        return
    end
    if self.currProgress == 0 or self.currProgress == 100 then
        return
    end
    if player ~= nil and self.teamId ~= player:getTeamId() then
        local teamName, playerName = player:getTeamNameAndPlayerName()
        XGameTips:sendTips(1036002, teamName, playerName)
        if GameMatch.hasStartGame then
            local money = GameConfig.addMoneyFromCart
            player:OnChangeMoney(money or 0)
        end
    end
    if self.isRunning then
        if player:getTeamId() == self.teamId then
            return
        end
        EngineWorld:getWorld():changeRailCarDirection(self.entityId)
        self.teamId = player:getTeamId()
        self:changeDirection()
    else
        self.isRunning = true
        if player:getTeamId() == 1 then
            EngineWorld:getWorld():startRailCarRun(self.entityId, self.direction1)
        end
        if player:getTeamId() == 2 then
            EngineWorld:getWorld():startRailCarRun(self.entityId, self.direction2)
        end

        self.teamId = player:getTeamId()
        self:changeDirection()
    end
end

function XGameCar:changeDirection()
    if self.id > 3 then
        return
    end
    local dir = 0
    if self.teamId == 1 then
        dir = 2
    else
        dir = 1
    end
    HostApi.changeCarDirection(self.id, dir)
end

function XGameCar:onMove(position)
    self.position = position
    if self.isFirst then
        self.isFirst = false
        return
    end
    self.currProgress = self.route:getProgress(position)
    self:checkBuff(position)
    self:ifRunEnd()
    if GameMatch.hasStartGame == false then
        if self.currProgress == 0 or self.currProgress == 100 then
            if self.currProgress ~= self.lastProgress then
                EngineWorld:getWorld():changeRailCarDirection(self.entityId)
                self:changeDirection()
                self.teamId = self.teamId == 1 and 2 or 1
            end
        end
    end
end

function XGameCar:checkBuff(position)
    local key = VectorUtil.hashVector3(VectorUtil.toBlockVector3(position.x, position.y, position.z))
    local buff = self.buffs[key]
    if buff == nil then
        return
    end
    if buff.Triggered then
        return
    end
    buff.Triggered = true
    local players = PlayerManager:getPlayers()
    local c_players = {}
    for _, player in pairs(players) do
        if player:getTeamId() == buff.TeamID then
            table.insert(c_players, player)
        end
    end
    if buff.Effect.ID ~= 0 and buff.Effect.Time > 0 then
        for _, player in pairs(c_players) do
            player:addEffect(buff.Effect.ID, buff.Effect.Time, buff.Effect.Level)
            local tempName, name = player:getTeamNameAndPlayerName()
            XGameTips:sendTips(1036003, tempName, tempName)
        end

    end

    if buff.Health ~= 0 then
        for _, player in pairs(c_players) do
            player:OnChangPlayerHp(buff.Health)
        end
    end
    c_players = {}
end

function XGameCar:onPlayerRespawn(player)
    for _, buff in pairs(self.buffs) do
        if buff.Triggered and buff.TeamID == player:getTeamId() then
            player:addEffect(buff.Effect.ID, buff.Effect.Time, buff.Effect.Level)
        end
    end
end

function XGameCar:setOnFrozen(frozenTime)
    if self.entityId == 0 then
        return
    end
    EngineWorld:getWorld():setRailCarFrozen(self.entityId, frozenTime)
end

function XGameCar:ifRunEnd()
    if GameMatch:ifGameRunning() == false then
        return
    end
    if self.entityId == 0 then
        return
    end
    -- 100 是红队赢  0 是蓝队
    if GameMatch.hasStartGame then
        if self.currProgress == 0 or self.currProgress == 100 then
            EngineWorld:getWorld():setRailSpeedInfo(self.entityId, 0, 0, 0)
            local winTeamId = self.currProgress == 100 and 1 or 2
            local yaw
            if self.id == 1 then
                yaw = 270
            end
            if self.id == 2 then
                yaw = self.currProgress == 100 and 0 or 180
            end
            if self.id == 3 then
                yaw = 90
            end
            local pos = VectorUtil.newVector3(self.position.x, self.position.y + 0.01, self.position.z)
            GameMatch:doRunningEnd(winTeamId)
            GameManager:removeOtherCar(self.entityId)
            GameMatch:StartTimer("car_closeup", 0, function()
                local pos2 = VectorUtil.newVector3(self.position.x, self.position.y + 2.0, self.position.z)
                EngineWorld:getWorld():playCloseup(pos2, 10.0, 4.0, 4.0, 600.0, yaw, 5.0)
            end)
            GameMatch:StartTimer("car_explosion", GameConfig.playExplosionWaitTime, function()
                EngineWorld:addSimpleEffect("car_explosion.effect", pos, 0)
            end)
            GameMatch:StartTimer("car_disappear", GameConfig.playExplosionWaitTime + 2, function()
                EngineWorld:removeEntity(self.entityId)
                self.entityId = 0
            end)
        end
    end
end

function XGameCar:RemoveCar()
    EngineWorld:removeEntity(self.entityId)
    self.entityId = 0
end

function XGameCar:RemovePracticeCar()
    if self.id > 3 then
        self:RemoveCar()
    end
end

return XGameCar