---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by work.
--- DateTime: 2018/7/3 11:55
---
require "base.util.VectorUtil"

ResourceBuilding = {}
ResourceBuilding.buildGroups = {}

function ResourceBuilding:init(stations)
    self:initResStation(stations)

end

function ResourceBuilding:initResStation(stations)
    for id, b_item in pairs(stations) do
        local builds = {}
        local resourceId = tonumber(b_item.resourceId)
        if self.buildGroups[resourceId] ~= nil then
            builds = self.buildGroups[resourceId]
        end
        local item = {}
        item.id = b_item.id
        item.proNpcActor = b_item.proNpcActor
        item.proNpcName = b_item.proNpcName
        item.level = tonumber(b_item.level)
        item.actor = b_item.actor
        item.name = b_item.name
        item.pos = VectorUtil.newVector3(tonumber(b_item.x), tonumber(b_item.y), tonumber(b_item.z))
        item.yaw = tonumber(b_item.yaw)
        item.outputIncrement = tonumber(b_item.outputIncrement)
        item.saveMaxIncrement = tonumber(b_item.saveMaxIncrement)
        item.price = tonumber(b_item.price)
        item.buildingIds = StringUtil.split(b_item.buildingIds, "#")
        builds[#builds + 1] = item
        self.buildGroups[resourceId] = builds

    end
end

function ResourceBuilding:getBuildsByGroupId(groupId)
    local builds = self.buildGroups[groupId]
    if builds then
        return builds
    end
    error("ResourceBuilding config error, can't find groupId:" .. groupId)
end

return ResourceBuilding