---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by work.
--- DateTime: 2018/7/4 17:09
---
require "config.BasicConfig"
require "config.ResourceBuilding"
require "data.GameResourceBuilding"
require "data.GameGetPrivateResource"
require "data.GamePromoteResource"

GamePrivateResource = class()

function GamePrivateResource:ctor(domain, player, resources)
    self.domain = domain
    self.resource = resources
    self.player = player
    self.receiveNpc = nil
    self.promoteNpc = nil
    self.curLv = 0
    self.stock = 0
    self.cdTime = 0
    self.isOpen = false
    self.timer = 0
    self.output = self.resource.output
    self.resSaveMax = self.resource.resSaveMax
    self.ResId = self.resource.id
    self.maxLv = self.resource.maxLv
    self.incrementOutput = 0
    self.ClllisionPlayers = {}
    self:onCreate()
end

--生产领取点和升级Npc
function GamePrivateResource:onCreate()
    self.isOpen = true
    --生成领取点
    local pos = BasicConfig:getPosByBasic(self.domain.basicId, self.resource.initPos)
    local yaw = BasicConfig:getYawByBasic(self.domain.basicId, self.resource.yaw)
    self.receiveNpc = GameGetPrivateResource.new(self, pos, yaw, self.resource.recNpcActor, self.resource.recNpcName)
    self:syncStock()
end

function GamePrivateResource:update()
    local distance = 1
    local pos = BasicConfig:getPosByBasic(self.domain.basicId, self.resource.initPos)
    local players = PlayerManager:getPlayers()
    for _, player in pairs(players) do
        local id = player:getEntityId()
        local playerPos = player.position or {}
        if playerPos.x or playerPos.y or playerPos.z then
            local curDistance = math.abs(playerPos.x - pos.x) ^ 2 + math.abs(playerPos.z - pos.z) ^ 2
            if math.abs(playerPos.y - pos.y) <= 2 then
                if curDistance <= distance ^ 2 and self.ClllisionPlayers[id] == nil then
                    self.receiveNpc:onPlayerHit(player)
                    self.ClllisionPlayers[id] = player
                elseif curDistance > distance ^ 2 and self.ClllisionPlayers[id] then
                    self.ClllisionPlayers[id] = nil
                end
            end
        end
    end
end

function GamePrivateResource:onTick(tick)
    self:update()
    if self.isOpen then
        self.timer = self.timer + 1
        self:outputResource()
    end
end

function GamePrivateResource:enhanceResourceOutputIncrement(increment)
    self.incrementOutput = increment
end

function GamePrivateResource:onRemoveResourceOutputIncrement()
    self.incrementOutput = 0
end
--产出资源产量
function GamePrivateResource:outputResource()
    if self.stock == self.resSaveMax then
        return
    end
    if self.timer % self.resource.interval == 0 and (self.output ~= 0 or self.incrementOutput ~= 0) then
        self.stock = math.min(self.stock + (self.output * self.player.resourceValue + self.incrementOutput), self.resSaveMax)
        self:syncStock()
    end
end

function GamePrivateResource:subResource(sub)
    self.stock = math.max(0, self.stock - sub)
    self:syncStock()
end

--领取资源
function GamePrivateResource:getResource(player, stealPercent)
    if self.stock == 0 then
        return
    end
    --领取资源
    local stock = math.floor(self.stock * stealPercent)
    self.stock = math.max(0, self.stock - stock)
    self:syncStock()
    player:addCurrency(stock)
end

--升级私有资源点
function GamePrivateResource:promoteResource(player, promoteResource)
    if self.curLv >= self.maxLv then
        return
    end
    local lv = self.curLv + 1
    local price = self:getPriceByLv(lv)
    local curCurrency = self.player:getCurrency()
    if curCurrency >= price then
        self.curLv = lv
        self.player:subCurrency(price)
        self:addResStation(self.curLv)
        self.domain:addBuildingRecord(promoteResource.build.id)
        self.domain:checkBuildings()
        promoteResource:onRemove()
        MsgSender.sendCenterTipsToTarget(player.rakssid, 2, Messages:buildsucceed())
    else
        MsgSender.sendCenterTipsToTarget(player.rakssid, 2, Messages:noMoney())
    end
end

--添加资源台与提升存储上限与产出产量的增值
function GamePrivateResource:addResStation(curLv)
    --存储上限与产出产量的增值
    for i, build in pairs(self.resource.builds) do
        if build.level == curLv then
            self.resSaveMax = self.resSaveMax + build.saveMaxIncrement
            self.output = self.output + build.outputIncrement
            --生成资源建筑
            build.player = self.player
            local pos = BasicConfig:getPosByBasic(self.domain.basicId, build.pos)
            local yaw = BasicConfig:getYawByBasic(self.domain.basicId, build.yaw)
            GameResourceBuilding.new(build, pos, yaw, build.actor, build.name)
        end
    end
end

--得到价格通过等级
function GamePrivateResource:getPriceByLv(lv)
    for i, build in pairs(self.resource.builds) do
        if build.level == lv then
            return build.price
        end
    end
end

function GamePrivateResource:isResourcePlayer(player)
    return self.player == player
end

function GamePrivateResource:syncStock()
    local stock = math.floor(self.stock)
    EngineWorld:getWorld():updateActorNpcContent(self.receiveNpc.entityId, self.resource.color .. "$" .. stock .. "\n " .. self.resource.color .. self.output .. "/" .. self.resource.interval .. " s")
end

return GamePrivateResource